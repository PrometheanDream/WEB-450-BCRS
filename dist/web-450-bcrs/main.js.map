{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/contact-us/contact-us.component.css","webpack:///./src/app/contact-us/contact-us.component.html","webpack:///./src/app/contact-us/contact-us.component.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/navbar/navbar.component.css","webpack:///./src/app/core/navbar/navbar.component.html","webpack:///./src/app/core/navbar/navbar.component.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/route-logs-page/route-logs-page.component.css","webpack:///./src/app/route-logs-page/route-logs-page.component.html","webpack:///./src/app/route-logs-page/route-logs-page.component.ts","webpack:///./src/app/security-questionnaire/security-questionnaire.component.css","webpack:///./src/app/security-questionnaire/security-questionnaire.component.html","webpack:///./src/app/security-questionnaire/security-questionnaire.component.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/service-invoice-form/service-invoice-form.component.css","webpack:///./src/app/service-invoice-form/service-invoice-form.component.html","webpack:///./src/app/service-invoice-form/service-invoice-form.component.ts","webpack:///./src/app/service-order-form/service-order-form.component.css","webpack:///./src/app/service-order-form/service-order-form.component.html","webpack:///./src/app/service-order-form/service-order-form.component.ts","webpack:///./src/app/service-order-view/service-order-view.component.css","webpack:///./src/app/service-order-view/service-order-view.component.html","webpack:///./src/app/service-order-view/service-order-view.component.ts","webpack:///./src/app/service-sales-graph/service-sales-graph.component.css","webpack:///./src/app/service-sales-graph/service-sales-graph.component.html","webpack:///./src/app/service-sales-graph/service-sales-graph.component.ts","webpack:///./src/app/session.service.ts","webpack:///./src/app/update-password/update-password.component.css","webpack:///./src/app/update-password/update-password.component.html","webpack:///./src/app/update-password/update-password.component.ts","webpack:///./src/app/user-create/user-create.component.css","webpack:///./src/app/user-create/user-create.component.html","webpack:///./src/app/user-create/user-create.component.ts","webpack:///./src/app/user-edit/user-edit.component.css","webpack:///./src/app/user-edit/user-edit.component.html","webpack:///./src/app/user-edit/user-edit.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n.mat-card{\\r\\n    text-align: justify;\\r\\n    margin: 5%;\\r\\n    margin-right: 10%;\\r\\n    margin-top: 3%;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n  .mat-card-header{\\r\\n    font-family: Quicksand;\\r\\n    font-weight: 200;\\r\\n    font-size: 10pt;\\r\\n    margin: 0%;\\r\\n    width: 100%;\\r\\n    \\r\\n}\\r\\n\\r\\n  p{\\r\\n    font-family: Quicksand;\\r\\n    font-size: 18pt;\\r\\n    font-weight: 200;\\r\\n    width: 100%;\\r\\n    position: center;\\r\\n    margin-top: 2%;\\r\\n    margin-bottom: 2%;\\r\\n  }\\r\\n\\r\\n  .history-container{\\r\\n     margin-left: 11%;\\r\\n     text-align: justify;\\r\\n } \\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<mat-card class=\\\"history-container\\\">\\r\\n  <div class=\\\"paragraph-container\\\"></div>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>\\r\\n      <h1>Bob's Computer Repair Shop: A Brief History</h1>\\r\\n    </mat-card-title>\\r\\n    <br><br />\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <h3>\\r\\n      <p>\\r\\n        Bob's Computer Repair Shop was founded in 1997. He started off with simple PC home repair as side hobby. In\\r\\n        2002, after 5 years in service, Bob decided to expand his hobby and start his own business.\\r\\n        He started off in what was an old laundry mat. He gutted the insides and renovated. His priority was to make\\r\\n        a place where people would feel comfortable dropping off their PCs and Mac to be serviced. Initially, he\\r\\n        did simple repairs, memory expansion, and operating system installs. As technology progressed, so did he. He\\r\\n        leared all he could about hardware and software repair as well as malware and anti-virus protection. As Bob\\r\\n        got\\r\\n        more and more popular, he realized his workforce had to grow. He hired on four extra people to help with\\r\\n        computer repairs, while handled the front desk. The various talents of his staff has allowed him to expand\\r\\n        his services\\r\\n        even more. Bob now offers Password Reset, Spyware Removal, RAM Upgrades, Software Installation, Tune-ups,\\r\\n        Keyboard Cleaning, and Disk Cleanup.\\r\\n      </p>\\r\\n    </h3>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// forms\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule, FormGroup, Validators } from '@angular/forms';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n// charts module\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\n// material components\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\r\n\r\n// custom app components\r\nimport { UserComponent } from './user/user.component';\r\nimport { NavbarComponent } from './core';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { AppRoutes } from './app.routing';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { SecurityQuestionnaireComponent } from './security-questionnaire/security-questionnaire.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { ContactUsComponent } from './contact-us/contact-us.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\n\r\n\r\n// session\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ServiceOrderFormComponent } from './service-order-form/service-order-form.component';\r\nimport { ServiceInvoiceFormComponent } from './service-invoice-form/service-invoice-form.component';\r\nimport { ServiceOrderViewComponent } from './service-order-view/service-order-view.component';\r\nimport { ServiceSalesGraphComponent } from './service-sales-graph/service-sales-graph.component';\r\nimport { RouteLogsPageComponent } from './route-logs-page/route-logs-page.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    NavbarComponent,\r\n    UserEditComponent,\r\n    UserCreateComponent,\r\n    SecurityQuestionnaireComponent,\r\n    LoginComponent,\r\n    ErrorComponent,\r\n    AboutUsComponent,\r\n    ContactUsComponent,\r\n    PageNotFoundComponent,\r\n    ServerErrorComponent,\r\n    UpdatePasswordComponent,\r\n    HomePageComponent,\r\n    ServiceOrderFormComponent,\r\n    ServiceInvoiceFormComponent,\r\n    ServiceOrderViewComponent,\r\n    ServiceSalesGraphComponent,\r\n    RouteLogsPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    RouterModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    ChartsModule,\r\n    RouterModule.forRoot(AppRoutes, { useHash: true, enableTracing: false }),\r\n  ],\r\n  providers: [LocalStorageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule, ROUTES } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { SecurityQuestionnaireComponent } from './security-questionnaire/security-questionnaire.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\n\r\n\r\n\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { ContactUsComponent } from './contact-us/contact-us.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { ServiceOrderFormComponent } from './service-order-form/service-order-form.component';\r\nimport { ServiceInvoiceFormComponent } from './service-invoice-form/service-invoice-form.component';\r\nimport { ServiceOrderViewComponent } from './service-order-view/service-order-view.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ServiceSalesGraphComponent } from './service-sales-graph/service-sales-graph.component';\r\nimport { RouteLogsPageComponent } from './route-logs-page/route-logs-page.component';\r\n\r\n\r\n\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UserComponent\r\n  },\r\n  {\r\n    path: 'user-edit/:id',\r\n    component: UserEditComponent\r\n  },\r\n  {\r\n    path: 'user-create',\r\n    component: UserCreateComponent\r\n  },\r\n  {\r\n    path: 'questionnaire',\r\n    component: SecurityQuestionnaireComponent\r\n  },\r\n  {\r\n    path: 'questionnaire/:id',\r\n    component: SecurityQuestionnaireComponent\r\n  },\r\n  {\r\n    path: 'session/login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'session/error',\r\n    component: ErrorComponent\r\n  },\r\n  {\r\n    path: 'about-us',\r\n    component: AboutUsComponent\r\n  },\r\n  {\r\n    path: 'contact-us',\r\n    component: ContactUsComponent\r\n  },\r\n  {\r\n    path: 'updatepassword',\r\n    component: UpdatePasswordComponent\r\n  },\r\n  {\r\n    path: 'homepage',\r\n    component: HomePageComponent\r\n  },\r\n  {\r\n    path: 'service-order',\r\n    component: ServiceOrderFormComponent\r\n  },\r\n  {\r\n    path: 'service-invoice',\r\n    component: ServiceInvoiceFormComponent\r\n  },\r\n  {\r\n    path: 'service-order-view/:id',\r\n    component: ServiceOrderViewComponent\r\n  },\r\n  {\r\n    path: 'service-sales-graph',\r\n    component: ServiceSalesGraphComponent\r\n  },\r\n  {\r\n    path: 'route-log',\r\n    component: RouteLogsPageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: ServerErrorComponent\r\n  },\r\n];\r\n\r\n","module.exports = \".mat-card-header{\\r\\n    font-family: Quicksand;\\r\\n    font-weight: 200;\\r\\n    font-size: 10pt;\\r\\n    margin: 0%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-card{\\r\\n    margin: 5%;\\r\\n}\\r\\n\\r\\n.mat-card-content{\\r\\n    font-family: Quicksand;\\r\\n    font-weight: 200;\\r\\n    font-size: 16pt;\\r\\n    margin: 0%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<mat-card class=\\\"contact-container\\\">\\r\\n  <div class=\\\"us-container\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h1>Contact Us</h1>\\r\\n      </mat-card-title>\\r\\n      <br><br />\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      Address: 6633 Troost Avenue<br>\\r\\n      Central City, MO 64108<br>\\r\\n      Phone No: 1-816-262-7277\\r\\n      <br>\\r\\n      E-mail: <a href=\\\"mailto:bobscrs@email.com\\\">bobscrs@email.com</a>\\r\\n    </mat-card-content>\\r\\n  </div>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-us',\r\n  templateUrl: './contact-us.component.html',\r\n  styleUrls: ['./contact-us.component.css']\r\n})\r\nexport class ContactUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export * from './navbar/navbar.component'\r\n","module.exports = \".mat-button{\\r\\n    font-family: Quicksand;\\r\\n    font-size: 12pt;\\r\\n    font-weight: 200;\\r\\n}\\r\\n\\r\\n.mat-toolbar{\\r\\n    width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/homepage']\\\">Home</button>\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/service-invoice']\\\">Invoices</button>\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/service-sales-graph']\\\">Sales Graph</button>\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/users']\\\">Users</button> \\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/route-log']\\\">Access Logs</button>\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/about-us']\\\">About Us</button>\\r\\n\\r\\n  <button mat-button [routerLink]=\\\"['/contact-us']\\\">Contact Us</button>\\r\\n\\r\\n  <!-- User profile menu -->\\r\\n  <button [matMenuTriggerFor]=\\\"user\\\" color=\\\"none\\\" mat-icon-button class=\\\"ml-xs\\\">\\r\\n    <mat-icon>person</mat-icon>\\r\\n  </button>\\r\\n\\r\\n  <mat-menu #user=\\\"matMenu\\\" x-position=\\\"before\\\">\\r\\n\\r\\n    <button color=\\\"accent\\\" [routerLink]=\\\"['/service-order']\\\" mat-menu-item>\\r\\n      <mat-icon>shopping_cart</mat-icon>\\r\\n      Create Service Order\\r\\n    </button>\\r\\n\\r\\n    <button [routerLink]=\\\"['/user-create']\\\" mat-menu-item>\\r\\n      <mat-icon>person_add</mat-icon>\\r\\n      Register Account\\r\\n    </button>\\r\\n\\r\\n    <button [routerLink]=\\\"['/updatepassword']\\\" mat-menu-item>\\r\\n      <mat-icon>vpn_key</mat-icon>\\r\\n      Change Password\\r\\n    </button>\\r\\n\\r\\n    <!-- <button mat-menu-item>\\r\\n      <mat-icon>settings</mat-icon>\\r\\n      Settings\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>account_box</mat-icon>\\r\\n      Profile\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>notifications_off</mat-icon>\\r\\n      Disable notifications\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>exit_to_app</mat-icon>\\r\\n      Sign Out\\r\\n    </button> -->\\r\\n\\r\\n  </mat-menu>\\r\\n\\r\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../../session.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\nusers: any\r\ntoken: string\r\nuser: any\r\nid: string\r\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute, private sessionService: SessionService,) { \r\n    \r\n    this.token = sessionService.getLocalStorage()\r\n    // creates a new HttpHeaders and assigns this.token to the x-access-token\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'x-access-token': this.token\r\n    })\r\n\r\n\r\n    this.http.get('http://localhost:3000/api/user', {headers} ).subscribe(data => {\r\n      this.users = data\r\n    });\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>500 page</h2>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"h1{\\r\\n    -ms-grid-row-align: auto;\\r\\n        align-self: auto;\\r\\n    margin-top: 1%;\\r\\n    margin-left: 22%;\\r\\n}\\r\\n\\r\\nimg.mat-card-image{\\r\\n    width: 80%;\\r\\n    height: 60%;\\r\\n    margin-left: 10%;\\r\\n    padding-top: 2%;\\r\\n}\\r\\n\\r\\n.landing-page{\\r\\n    height: 80%;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n    margin-top: 2%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<mat-card class=\\\"landing-page\\\">\\r\\n  <mat-card-header>\\r\\n    <h1>Welcome to Bob's Computer Repair Shop</h1>\\r\\n  </mat-card-header>\\r\\n  <img mat-card-image src=\\\"assets/computerdoc.jpg\\\" alt=\\\"computer-picture\\\">\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-card{\\r\\n    font-family: Quicksand;\\r\\n    font-size: 16pt;\\r\\n    font-weight: 200;\\r\\n    margin: 5%;\\r\\n    margin-left: 27%;\\r\\n    width: 45%;\\r\\n\\r\\n}\\r\\n\\r\\nbutton.mat-raised-button.mat-primary{\\r\\n    margin-left: 2%;\\r\\n}\"","module.exports = \"<mat-card>\\r\\n  <h2>Log In </h2><br>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['email']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [formControl]=\\\"form.controls['password']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <br />\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/user-create\\\">Register Account</button>\\r\\n  <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/updatepassword\\\">Forgot Password?</button>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup\r\n  user: any\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router, private sessionService: SessionService) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: [null, Validators.compose([Validators.required ])],\r\n      password: [null, Validators.compose([Validators.required ])],\r\n    })\r\n    // set default value for quick logging in\r\n    //this.form.controls['email'].setValue('bobsmith@email.com')\r\n    //this.form.controls['password'].setValue('s3cret')\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user = {\r\n      email: this.form.controls['email'].value,\r\n      password: this.form.controls['password'].value,\r\n    }\r\n\r\n    this.http.post('/api/session/login', this.user).subscribe(res => {\r\n      this.sessionService.setLocalStorage(res['token'])\r\n      this.router.navigate(['/homepage'], res);\r\n    })\r\n  }\r\n}\r\n","module.exports = \"h1 {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 22pt;\\r\\n    font-weight: 200;\\r\\n    text-align: center;\\r\\n    margin-top: 10%;\\r\\n    color: white;\\r\\n    \\r\\n}\\r\\n\\r\\nh5 {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 16pt;\\r\\n    font-weight: 200;\\r\\n    text-align: center;\\r\\n    margin-top: 1%;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nimg.mat-card-image{\\r\\n    width: 1220px;\\r\\n    height: 765px;\\r\\n    margin: 2%;\\r\\n    margin-left: 17%;\\r\\n}\\r\\n\\r\\n.error-page{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<mat-card class=\\\"error-page\\\">\\r\\n  <img mat-card-image src=\\\"assets/404.png\\\" alt=\\\"404-error\\\">\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"logs\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <ng-container matColumnDef=\\\"log\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Log Entries</th>\\r\\n    <td mat-cell *matCellDef=\\\"let log\\\">{{ log }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-route-logs-page',\r\n  templateUrl: './route-logs-page.component.html',\r\n  styleUrls: ['./route-logs-page.component.css']\r\n})\r\nexport class RouteLogsPageComponent implements OnInit {\r\n  logs: Array<string> = [];\r\n  displayedColumns: string[] = ['log'];\r\n  string: any\r\n  objects: any\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    \r\n    this.http.get('/api/logs', {responseType: 'text'})\r\n    .subscribe(data => { this.logs = data.split('\\n');\r\n          },\r\n            err => {\r\n              console.log(err);\r\n                  }\r\n              );\r\n    \r\n    \r\n\r\n   }\r\n\r\n\r\n  \r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \".mat-card {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 22pt;\\r\\n    font-weight: 200;\\r\\n    margin: 5%;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n  <h2>Fill Out Security Questionnaire</h2><br>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n    <mat-card-content>\\r\\n\\r\\n      <p>What is your Mother's Maiden name?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [value]=\\\"questionnaire.answer1\\\" [formControl]=\\\"form.controls['answer1']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>In which town were you born?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [value]=\\\"questionnaire.answer2\\\" [formControl]=\\\"form.controls['answer2']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>What is your favourite color?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [value]=\\\"questionnaire.answer3\\\" [formControl]=\\\"form.controls['answer3']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>What is your favourite planet?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [value]=\\\"questionnaire.answer4\\\" [formControl]=\\\"form.controls['answer4']\\\" />\\r\\n      </mat-form-field>\\r\\n\\r\\n      <br />\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-security-questionnaire',\r\n  templateUrl: './security-questionnaire.component.html',\r\n  styleUrls: ['./security-questionnaire.component.css']\r\n})\r\nexport class SecurityQuestionnaireComponent implements OnInit {\r\n  id: String\r\n  form: FormGroup\r\n  questionnaire: any\r\n  token: string \r\n  users: any\r\n  user: any\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router, private sessionService: SessionService, private route: ActivatedRoute) {\r\n        \r\n    \r\n        // gets token from local storage and assigns to this.token\r\n        this.token = sessionService.getLocalStorage()\r\n        // creates a new HttpHeaders and assigns this.token to the x-access-token\r\n        const headers = new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          'x-access-token': this.token\r\n        })\r\n        // pulls the info and assigns to data\r\n        this.http.get('http://localhost:3000/api/user', {headers} ).subscribe(data => {\r\n          this.users = data\r\n        });\r\n\r\n\r\n        this.id = route.snapshot.paramMap.get('id')\r\n\r\n        // grabs database info and maps the info from the selected user for current info\r\n        this.http.get('/api/user/' + this.id).subscribe( data => {\r\n          this.questionnaire = {\r\n            answer1: data['answer1'],\r\n            answer2: data['answer2'],\r\n            answer3: data['answer3'],\r\n            answer4: data['answer4']\r\n          }\r\n        })\r\n        \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      answer1: [null, Validators.compose([Validators.required ])],\r\n      answer2: [null, Validators.compose([Validators.required ])],\r\n      answer3: [null, Validators.compose([Validators.required ])],\r\n      answer4: [null, Validators.compose([Validators.required ])],\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.questionnaire = {\r\n      answer1: this.form.controls['answer1'].value,\r\n      answer2: this.form.controls['answer2'].value,\r\n      answer3: this.form.controls['answer3'].value,\r\n      answer4: this.form.controls['answer4'].value,\r\n    }\r\n\r\n    this.http.put('/api/questionnaire/' + this.id, this.questionnaire).subscribe(res => {\r\n      this.router.navigate(['/users'], res)\r\n    })\r\n  }\r\n}","module.exports = \"h1 {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 22pt;\\r\\n    font-weight: 200;\\r\\n    text-align: center;\\r\\n    margin-top: 10%;\\r\\n    \\r\\n}\\r\\n\\r\\nh5 {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 16pt;\\r\\n    font-weight: 200;\\r\\n    text-align: center;\\r\\n    margin-top: 1%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"server-error-page\\\">\\r\\n  <span class=\\\"server-error-code\\\">\\r\\n    <h1>500</h1>\\r\\n  </span>\\r\\n  <h5>We're sorry. But you seemed to have encounterd a server error-page.</h5>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  font-family: Quicksand;\\r\\n  font-size: 22pt;\\r\\n  font-weight: 200;\\r\\n  color: white;\\r\\n  width: 100%;\\r\\n  }\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"services\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <ng-container matColumnDef=\\\"_id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>ID</th>\\r\\n    <td mat-cell *matCellDef=\\\"let service\\\">{{ service._id }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"create_date\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Date Created</th>\\r\\n      <td mat-cell *matCellDef=\\\"let service\\\">{{ service.create_date }}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"order_total\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Order Total</th>\\r\\n      <td mat-cell *matCellDef=\\\"let service\\\">${{ service.order_total * 10 }}.00</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"viewInvoice\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>View Invoice Summary</th>\\r\\n        <td mat-cell *matCellDef=\\\"let service\\\">\\r\\n            <button mat-icon-button [routerLink]=\\\"['/service-order-view', service._id]\\\">\\r\\n              <mat-icon>mail_outline</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient,  HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-service-invoice-form',\r\n  templateUrl: './service-invoice-form.component.html',\r\n  styleUrls: ['./service-invoice-form.component.css']\r\n})\r\nexport class ServiceInvoiceFormComponent implements OnInit {\r\n  displayedColumns: string[] = ['_id', 'create_date', 'order_total', 'viewInvoice'];\r\nid: string\r\ntoken: string\r\nservices: any\r\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router, private sessionService: SessionService ) {\r\n\r\n    this.token = sessionService.getLocalStorage()\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'x-access-token': this.token\r\n    })\r\n\r\n    this.http.get('/api/services', {headers} ).subscribe(data => {\r\n      this.services = data\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-card{\\r\\n    margin: 5%;\\r\\n}\\r\\n\\r\\nbutton.mat-raised-button.mat-accent{\\r\\n    margin-left: 1%;\\r\\n}\"","module.exports = \"\\r\\n\\r\\n<mat-card>\\r\\n  <h2>Service Repair Order Form </h2><br>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost1()\\\" (ngModel)=\\\"checked\\\" name=\\\"password_reset\\\" [formControl]=\\\"form.controls['password_reset']\\\" />\\r\\n        <span> Password Reset $15.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost2()\\\" (ngModel)=\\\"checked\\\" name=\\\"spyware_removal\\\" [formControl]=\\\"form.controls['spyware_removal']\\\" />\\r\\n        <span> Spyware Removal $25.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost3()\\\" (ngModel)=\\\"checked\\\" name=\\\"ramUpgrade\\\" [formControl]=\\\"form.controls['ramUpgrade']\\\" />\\r\\n        <span> RAM Upgrade $45.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost4()\\\" (ngModel)=\\\"checked\\\" name=\\\"software_install\\\" [formControl]=\\\"form.controls['software_install']\\\" />\\r\\n        <span> Software Install $50.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost5()\\\" (ngModel)=\\\"checked\\\" name=\\\"tuneUp\\\" [formControl]=\\\"form.controls['tuneUp']\\\" />\\r\\n        <span> Tune Up $45.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost6()\\\" (ngModel)=\\\"checked\\\" name=\\\"keyboardClean\\\" [formControl]=\\\"form.controls['keyboardClean']\\\" />\\r\\n        <span> Keyboard Clean $10.00</span>\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"checkbox\\\" (click)=\\\"updateCost7()\\\" (ngModel)=\\\"checked\\\" name=\\\"diskClean\\\" [formControl]=\\\"form.controls['diskClean']\\\" />\\r\\n        <span> Disk Clean Up $25.00</span>\\r\\n      </mat-form-field><br><br>\\r\\n\\r\\n      <!-- <p>Total Cost: ${{ updatedCost * }}  </p> -->\\r\\n\\r\\n      <br />\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [routerLink]=\\\"['/service-invoice', service._id]\\\"\\r\\n          [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-service-order-form',\r\n  templateUrl: './service-order-form.component.html',\r\n  styleUrls: ['./service-order-form.component.css']\r\n})\r\nexport class ServiceOrderFormComponent implements OnInit {\r\nform: FormGroup\r\nservice: any\r\nid: string\r\nchecked: boolean\r\ntoken: string\r\nservices: any\r\n\r\n\r\n//used to calculate order total\r\ntotalCost = 0;\r\ncost1 = 1.5;\r\ncost2 = 2.5;\r\ncost3 = 4.5;\r\ncost4 = 5.0; \r\ncost5 = 4.5;\r\ncost6 = 1.0;\r\ncost7 = 2.5;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private http: HttpClient, private router: Router, private sessionService: SessionService) { \r\n\r\n  this.token = sessionService.getLocalStorage()\r\n\r\n  const headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'x-access-token': this.token\r\n  })\r\n\r\n  this.http.get('http://localhost:3000/api/services', {headers} ).subscribe(data => {\r\n    this.services = data\r\n  });\r\n }\r\n  \r\n\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      password_reset: [false],\r\n      spyware_removal: [false],\r\n      ramUpgrade: [false],\r\n      software_install: [false],\r\n      tuneUp: [false],\r\n      keyboardClean: [false],\r\n      diskClean: [false],\r\n    })\r\n  \r\n  }\r\n  //updates the cost total depending on which checkbox is clicked\r\n  updateCost1() {\r\n    this.totalCost += this.cost1;\r\n  }\r\n  updateCost2() {\r\n    this.totalCost += this.cost2;\r\n  }\r\n  updateCost3() {\r\n    this.totalCost += this.cost3;\r\n  }\r\n  updateCost4() {\r\n    this.totalCost += this.cost4;\r\n  }\r\n  updateCost5() {\r\n    this.totalCost += this.cost5;\r\n  }\r\n  updateCost6() {\r\n    this.totalCost += this.cost6;\r\n  }\r\n  updateCost7() {\r\n    this.totalCost += this.cost7;\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.service = {\r\n      password_reset: this.form.controls['password_reset'].value,\r\n      spyware_removal: this.form.controls['spyware_removal'].value,\r\n      ramUpgrade: this.form.controls['ramUpgrade'].value,\r\n      software_install: this.form.controls['software_install'].value,\r\n      tuneUp: this.form.controls['tuneUp'].value,\r\n      keyboardClean: this.form.controls['keyboardClean'].value,\r\n      diskClean: this.form.controls['diskClean'].value,\r\n      order_total: this.totalCost\r\n    }\r\n  \r\n\r\n  this.http.post('/api/services', this.service).subscribe(res => {\r\n    this.router.navigate(['/service-invoice'], res)\r\n    })\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<mat-card>\\r\\n  <h3>Invoice Receipt</h3>\\r\\n<ul>\\r\\n  <li>ID: {{ service._id }}</li><br>\\r\\n  <li>Password Reset Selected: {{ service.password_reset }}</li><br>\\r\\n  <li>Spyware Removal Selected: {{service.spyware_removal}}</li><br>\\r\\n  <li>Ram Upgrade Selected: {{service.ramUpgrade}}</li><br>\\r\\n  <li>Software Install Selected: {{service.software_install}}</li><br>\\r\\n  <li>Tune Up Selected: {{service.tuneUp}}</li><br>\\r\\n  <li>Keyboard Cleaning Selected: {{service.keyboardClean}}</li><br>\\r\\n  <li>Disk Clean Up Selected: {{service.diskClean}}</li><br>\\r\\n  <li>Order Total: ${{service.order_total * 10}}.00</li><br>\\r\\n</ul>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient,  HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-service-order-view',\r\n  templateUrl: './service-order-view.component.html',\r\n  styleUrls: ['./service-order-view.component.css']\r\n})\r\nexport class ServiceOrderViewComponent implements OnInit {\r\n  id: String\r\n  service: any\r\n  token: string\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router, private sessionService: SessionService) {\r\n    \r\n    \r\n    // gets token from local storage and assigns to this.token\r\n    this.token = sessionService.getLocalStorage()\r\n    // creates a new HttpHeaders and assigns this.token to the x-access-token\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'x-access-token': this.token\r\n    })\r\n\r\n    // pulls the info\r\n    this.http.get('http://localhost:3000/api/services', {headers} ).subscribe(data => {\r\n      this.service = data\r\n    });\r\n\r\n    this.id = route.snapshot.paramMap.get('id')\r\n\r\n    // grabs database info and maps the info from the selected user for current info\r\n    this.http.get('/api/services/' + this.id).subscribe( data => {\r\n      this.service = {\r\n        _id: data['_id'],\r\n        password_reset: data['password_reset'],\r\n        spyware_removal: data['spyware_removal'],\r\n        ramUpgrade: data['ramUpgrade'],\r\n        software_install: data['software_install'],\r\n        tuneUp: data['tuneUp'],\r\n        keyboardClean: data['keyboardClean'],\r\n        diskClean: data['diskClean'],\r\n        order_total: data['order_total']\r\n      }\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".graph-background {\\r\\n    background-color: aliceblue;\\r\\n}\\r\\n\\r\\nli {\\r\\n    color: white;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<!-- <div *ngFor=\\\"let data of aggregates\\\">\\r\\n<ul>\\r\\n  <li>Total amount sold: ${{ data.total }}.00</li>\\r\\n</ul>\\r\\n</div>\\r\\n\\r\\n<ul>\\r\\n  <li>{{aggregate.total}}</li>\\r\\n</ul> -->\\r\\n\\r\\n<mat-card class=\\\"graph-background\\\">\\r\\n<div>\\r\\n    <div style=\\\"display: block\\\">\\r\\n      <canvas baseChart\\r\\n              [datasets]=\\\"barChartData\\\"\\r\\n              [labels]=\\\"barChartLabels\\\"\\r\\n              [options]=\\\"barChartOptions\\\"\\r\\n              [legend]=\\\"barChartLegend\\\"\\r\\n              [chartType]=\\\"barChartType\\\"\\r\\n              (chartHover)=\\\"chartHovered($event)\\\"\\r\\n              (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient,  HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\nimport { throwMatDuplicatedDrawerError } from '@angular/material/sidenav';\r\nimport { pipe } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-service-sales-graph',\r\n  templateUrl: './service-sales-graph.component.html',\r\n  styleUrls: ['./service-sales-graph.component.css']\r\n})\r\nexport class ServiceSalesGraphComponent implements OnInit {\r\n  productInfo: any\r\n  service: any\r\n  token: string\r\n  aggregates: any\r\n  aggregate: any\r\n\r\n  //barChartData: any[] = [];\r\n  \r\n  //for barchart\r\n  public barChartOptions:any = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  };\r\n  public barChartType:string = 'bar';\r\n  public barChartLegend:boolean = true;\r\n\r\n  //chart events\r\n  public chartClicked(e:any):void {\r\n    console.log(e);\r\n  }\r\n    public chartHovered(e:any):void {\r\n    console.log(e);\r\n  }\r\n\r\n  //chart columns and data\r\n   barChartLabels:string[] = ['Password Resets', 'Spyware Removals', \r\n  'Ram Upgrades', 'Software Installs', 'Tune Ups', 'Cleaned Keyboards', \r\n  'Cleaned Disks', 'Total $ x 10'];\r\n  \r\n  //chart data copy before messing with it\r\n  public barChartData:any[] = [\r\n    {data: [0, 0, 0, 0, 0, 0, 0, 0], label: 'Units Sold'}\r\n  ];\r\n  \r\n  constructor(private http: HttpClient, private router: Router, private sessionService: SessionService) {\r\n      \r\n      // gets token from local storage and assigns to this.token\r\n      this.token = sessionService.getLocalStorage()\r\n      // creates a new HttpHeaders and assigns this.token to the x-access-token\r\n      const headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': this.token\r\n      })\r\n    this.http.get('http://localhost:3000/api/services', {headers} ).subscribe(data => {\r\n      this.service = data\r\n        });\r\n\r\n    //inputting the data into the barchartarray\r\n    this.http.get('/api/services/aggregate').subscribe(\r\n      res=> {\r\n          this.barChartData = [ res[0]['passwordCount'], res[0]['spyCount'], \r\n          res[0]['ramCount'], res[0]['softwareCount'], res[0]['tuneCount'], \r\n          res[0]['keyboardCount'], res[0]['diskCount'], res[0]['total']] ;\r\n      },\r\n      err =>{\r\n  \r\n      }\r\n  );\r\n\r\n      \r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n\r\n  constructor(private localStorage: LocalStorageService ) { }\r\n\r\n  setLocalStorage(valueToSet: string) {\r\n    console.log(valueToSet)\r\n    this.localStorage.store('token', valueToSet);\r\n  }\r\n\r\n  getLocalStorage() {\r\n    return this.localStorage.retrieve('token');\r\n  }\r\n\r\n  deleteLocalStorage() {\r\n    this.localStorage.clear('token');\r\n  }\r\n}\r\n","module.exports = \".mat-card{\\r\\n    width: 50%;\\r\\n    margin: 5%;\\r\\n    margin-left: 25%;\\r\\n}\\r\\n.mat-form-field{\\r\\n    margin: 5%;\\r\\n}\\r\\n.mat-card-actions{\\r\\n    margin: 5%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<mat-card>\\r\\n  <h2>Update Password </h2><br>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input matInput #new placeholder=\\\"Email\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['email']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput #confirm placeholder=\\\"Password\\\" type=\\\"password\\\" [formControl]=\\\"form.controls['password']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <br />\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-update-password',\r\n  templateUrl: './update-password.component.html',\r\n  styleUrls: ['./update-password.component.css']\r\n})\r\nexport class UpdatePasswordComponent implements OnInit {\r\nuser: any\r\nform: FormGroup\r\n\r\n  constructor(private http: HttpClient, private router: Router, private fb: FormBuilder, private sessionService: SessionService) {\r\n    \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: [null, Validators.compose([Validators.required ])],\r\n      password: [null, Validators.compose([Validators.required ])],\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user = {\r\n      email: this.form.controls['email'].value,\r\n      password: this.form.controls['password'].value,\r\n    }\r\n\r\n    this.http.put('/api/session/new-password', this.user)\r\n      .subscribe(res => {\r\n        this.user = res; \r\n        this.router.navigateByUrl('/session/login'), (err) => {console.log(err)}\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-card {\\r\\n    font-family: Quicksand;\\r\\n    font-size: 16pt;\\r\\n    font-weight: 200;\\r\\n    margin: 2%;\\r\\n    margin-left: 32%;\\r\\n    width: 40%;\\r\\n    color: white;\\r\\n    background-color: #424242;\\r\\n    padding-bottom: 0%;\\r\\n}\\r\\n\\r\\n.mat-raised-button{\\r\\n    margin-left: 5%;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<mat-card>\\r\\n  <h2>Create new user </h2><br>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['email']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [formControl]=\\\"form.controls['password']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"First Name\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['firstname']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['lastname']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Address\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['address']\\\" />\\r\\n      </mat-form-field><br><br>\\r\\n\\r\\n      <h3>Answer Security Questions</h3><br>\\r\\n\\r\\n      <p>What is your Mother's Maiden name?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['answer1']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>What town were you born in?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['answer2']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>What is your favorite color?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['answer3']\\\" />\\r\\n      </mat-form-field><br>\\r\\n\\r\\n      <p>What is your favorite planet?</p>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Answer\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['answer4']\\\" />\\r\\n      </mat-form-field>\\r\\n\\r\\n      <br />\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-user-create',\r\n  templateUrl: './user-create.component.html',\r\n  styleUrls: ['./user-create.component.css']\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  form: FormGroup\r\n  user: any\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router, private sessionService: SessionService) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: [null, Validators.compose([Validators.required ])],\r\n      password: [null, Validators.compose([Validators.required ])],\r\n      firstname: [null, Validators.compose([Validators.required ])],\r\n      lastname: [null, Validators.compose([Validators.required ])],\r\n      address: [null, Validators.compose([Validators.required ])],\r\n      answer1: [null, Validators.compose([Validators.required ])],\r\n      answer2: [null, Validators.compose([Validators.required ])],\r\n      answer3: [null, Validators.compose([Validators.required ])],\r\n      answer4: [null, Validators.compose([Validators.required ])],\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user = {\r\n      email: this.form.controls['email'].value,\r\n      password: this.form.controls['password'].value,\r\n      last_name: this.form.controls['lastname'].value,\r\n      first_name: this.form.controls['firstname'].value,\r\n      address: this.form.controls['address'].value,\r\n      answer1: this.form.controls['answer1'].value,\r\n      answer2: this.form.controls['answer2'].value,\r\n      answer3: this.form.controls['answer3'].value,\r\n      answer4: this.form.controls['answer4'].value,\r\n    }\r\n\r\n    this.http.post('/api/session/register', this.user).subscribe(res => {\r\n      this.router.navigate(['/session/login'], res)\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n    <h3>Update User Information</h3>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\r\\n      <mat-card-content>\\r\\n  \\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"First Name\\\" type=\\\"text\\\" [value]=\\\"user.first_name\\\" [formControl]=\\\"form.controls['firstname']\\\" />\\r\\n        </mat-form-field><br>\\r\\n  \\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" [value]=\\\"user.last_name\\\" [formControl]=\\\"form.controls['lastname']\\\" />\\r\\n        </mat-form-field><br>\\r\\n  \\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Address\\\" type=\\\"text\\\" [value]=\\\"user.address\\\" [formControl]=\\\"form.controls['address']\\\" />\\r\\n        </mat-form-field>\\r\\n  \\r\\n        <br />\\r\\n        <mat-card-actions>\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card-content>\\r\\n    </form>\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpClient,  HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.css']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  id: String\r\n  user: any\r\n  users: any;\r\n  form: FormGroup\r\n  token: string\r\n\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private http: HttpClient, private router: Router, private sessionService: SessionService ) {\r\n    // gets token from local storage and assigns to this.token\r\n    this.token = sessionService.getLocalStorage()\r\n    // creates a new HttpHeaders and assigns this.token to the x-access-token\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'x-access-token': this.token\r\n    })\r\n    // pulls the info\r\n    this.http.get('http://localhost:3000/api/user', {headers} ).subscribe(data => {\r\n      this.users = data\r\n    });\r\n\r\n\r\n\r\n    // assigns this.id the parameter id from the header info\r\n    this.id = route.snapshot.paramMap.get('id')\r\n\r\n    // grabs database info and maps the info from the selected user for current info\r\n    this.http.get('/api/user/' + this.id).subscribe( data => {\r\n      this.user = {\r\n        _id: data['_id'],\r\n        first_name: data['first_name'],\r\n        last_name: data['last_name'],\r\n        address: data['address']\r\n      }\r\n    })\r\n  }\r\n  //creates form on init and requires these fields\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      firstname: [null, Validators.compose([Validators.required ])],\r\n      lastname: [null, Validators.compose([Validators.required ])],\r\n      address: [null, Validators.compose([Validators.required ])],\r\n\r\n    })\r\n\r\n\r\n  }\r\n  //grabs the values from the form\r\n  onSubmit() {\r\n    this.user = {\r\n      last_name: this.form.controls['lastname'].value,\r\n      first_name: this.form.controls['firstname'].value,\r\n      address: this.form.controls['address'].value,\r\n\r\n    }\r\n    // sends the values of this.user to the mapped user as update\r\n    this.http.put('/api/update-user/different/' + this.id, this.user).subscribe(res => {\r\n      this.router.navigate(['/users'], res)\r\n    })\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  font-family: Quicksand;\\r\\n  font-size: 16pt;\\r\\n  font-weight: 200;\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"users\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <ng-container matColumnDef=\\\"_id\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>ID</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">{{ user._id }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"email\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Email</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">{{ user.email }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"firstName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>First Name</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">{{ user.first_name }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"lastName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Last Name</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">{{ user.last_name }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"address\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Address</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">{{ user.address }}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"update\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Update User</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n      <button color=\\\"accent\\\" mat-icon-button [routerLink]=\\\"['/user-edit', user._id]\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </button>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"updateSecurity\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Update Security Questions</th>\\r\\n      <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n          <button mat-icon-button [routerLink]=\\\"['/questionnaire', user._id]\\\">\\r\\n            <mat-icon>question_answer</mat-icon>\\r\\n          </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"delete\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>Delete</th>\\r\\n    <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n      <button color=\\\"warn\\\" mat-icon-button (click)=\\\"onDelete(user._id)\\\">\\r\\n        <mat-icon>delete</mat-icon>\\r\\n      </button>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\\r\\n\\r\\n<button color=\\\"accent\\\" mat-raised-button [routerLink]=\\\"['/user-create']\\\">New User</button>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {SessionService} from '../session.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  displayedColumns: string[] = ['_id', 'email', 'firstName', 'lastName', 'address', 'update', 'updateSecurity', 'delete'];\r\n  users: any;\r\n  token: string\r\n\r\n  constructor(private http: HttpClient, private router: Router, private sessionService: SessionService) {\r\n    this.token = sessionService.getLocalStorage()\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'x-access-token': this.token\r\n    })\r\n\r\n    this.http.get('/api/user', {headers} ).subscribe(data => {\r\n      this.users = data\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onDelete(id) {\r\n    this.http.delete('/api/user/' + id, {\r\n      headers: new HttpHeaders().set('x-access-token', this.token)\r\n    }).subscribe(res => {\r\n      this.router.navigate(['/users'], res);\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}